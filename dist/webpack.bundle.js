/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (() => {

eval("const formulario = document.querySelector('#enviar');\nconst container = document.querySelector('#formulario');\nconst resultado2 = document.querySelector('.temperaturas div:first-child');\nconst resultado3 = document.querySelector('.temperaturas div:last-child');\nconst dias = document.querySelector('#parcial section div');\nconst body = document.querySelector('body');\nconst appId = \"5573836c8af308c0056cd2e5dbd18627\"\n\nvar ahora = new Date();\nvar diaDeS = ahora.getDay();\nvar horas = ahora.getHours();\n\nconst dia = d => {\n    return d == 0 ? 'Domingo' :\n        d == 1 ? 'Lunes' :\n            d == 2 ? 'Martes' :\n                d == 3 ? 'Miercoles' :\n                    d == 4 ? 'Jueves' :\n                        d == 5 ? 'Viernes' :\n                            d == 6 ? 'Sabado' :\n                                'Undefined'\n} \n\nfunction actualizarHora() {\n\n    // Hora Local\n    var now = new Date();\n    var horas = now.getHours();\n    var minutos = now.getMinutes();\n\n    horas = horas < 10 ? '0' + horas : horas;\n    minutos = minutos < 10 ? '0' + minutos : minutos;\n\n    var tiempo = horas + ':' + minutos;\n    return tiempo\n\n}\n\nwindow.addEventListener('load', () => {\n    formulario.addEventListener('submit', buscarClima);\n})\n\nconst paisesYCiudades = {\n    AR: \"Buenos aires\",\n    CO: \"Bogota\",\n    CR: \"San Jose\",\n    ES: \"Madrid\",\n    US: \"Washington D. C.\",\n    MX: \"Ciudad de México\",\n    PE: \"Lima\",\n    UY: \"Montevideo\",\n    BR: \"Brasilia\",\n    EC: \"Quito\",\n    HN: \"Tegucigalpa\",\n    BO: \"Sucre\",\n    PY: \"Asunción\",\n    NI: \"Managua\",\n    GT: \"Ciudad de Guatemala\",\n    SV: \"San Salvador\",\n    PR: \"San Juan\"\n}\n\nfunction buscarClima(e) {\n    e.preventDefault();\n\n\n    // Validar\n    let pais = document.querySelector('#pais').value;\n    let ciudad = document.querySelector('#ciudad').value;\n\n    if ([pais, ciudad].includes('')) {\n        aviso('Los campos son obligatorios');\n        console.log(\"MISSING_ENV_VAR\".APP_LOCAL);\n        return;\n    }\n\n    let letter = ciudad[0].toUpperCase()\n    let ciuda2 = ciudad.slice(1, ciudad.length)\n    let ciudadNueva = letter + ciuda2\n    \n    if (paisesYCiudades[pais] !== ciudadNueva) {\n        aviso('El campo es incorrecto')\n        return;\n    }\n    // Consultar la API\n\n    consultarApi(ciudadNueva, pais);\n\n}\n\nfunction aviso(mensaje) {\n    const alerta = document.querySelector('.error')\n\n    if (!alerta) {\n        // Crear una alerta\n        const alerta = document.createElement('div');\n        alerta.classList.add('error');\n\n        alerta.innerHTML = `\n        <p style=\"text-align: center; font-size: 22px; color: red;\">${mensaje}</p>\n        `\n        container.appendChild(alerta);\n\n        setTimeout(() => {\n            alerta.remove();\n        }, 6000);\n    }\n}\n\nfunction consultarApi(ciudad, pais) {\n\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${ciudad},${pais}&appid=${appId}`\n\n    spinnerC()\n\n    fetch(url)\n        .then(respuesta => respuesta.json())\n        .then(datos => {\n            limpiarHTML();\n            limpiarClima();\n            console.log(datos);\n            if (datos.cod === '404') {\n                aviso('Ciudad no encontrada');\n                return\n            }\n            // Imprime la respuesta en el HTML\n            mostrarClima(datos)\n        })\n}\n\nconst resultWeather = estado => {\n    return estado === \"Clear\" ? '<img src=public/bxs-sun.svg alt=sol id=weather>' :\n        estado === \"Rain\" ? '<img src=public/cloud-rain-solid.svg alt=lluvia id=weather>' :\n            estado === \"Clouds\" ? '<img src=public/cloud-solid.svg alt=nubes id=weather>' :\n                estado === \"Thunderstorm\" ? '<img src=public/poo-storm-solid.svg alt=tormentas id=weather>' :\n                    estado === \"Drizzle\" ? '<img src=public/bx-cloud-drizzle.svg alt=lluvioso id=weather>' :\n                        '';\n}\n\nfunction mostrarClima(datos) {\n    const { main: { temp, temp_max, temp_min }, name, weather: [{ main }] } = datos\n\n    const tempCurry = KelACen(temp);\n    const tempMax = KelACen(temp_max);\n    const tempMin = KelACen(temp_min);\n\n    // Temperatura Maxima\n    const max = document.createElement('h3');\n    max.innerHTML = `Maxima: ${tempMax} º C`;\n    resultado2.appendChild(max);\n\n    // Temperatura minima\n    const min = document.createElement('h3');\n    min.innerHTML = `Minima: ${tempMin} º C`;\n    resultado3.appendChild(min);\n\n\n    // ciudad\n    const city = document.createElement('h1');\n    city.innerHTML = `${name}`\n    dias.appendChild(city)\n\n    // icon clima\n    const iconWeather = document.createElement('span');\n    iconWeather.innerHTML = resultWeather(main);\n    dias.appendChild(iconWeather);\n\n    // Temperatura Actual\n    const actual = document.createElement('h3')\n    actual.innerHTML = `${tempCurry} º C`;\n    dias.appendChild(actual);\n\n    // Mostrar dia\n    const diaHoy = document.createElement('p');\n    diaHoy.innerHTML = `${dia(diaDeS)}, ${actualizarHora()}`;\n    dias.appendChild(diaHoy);\n\n\n}\n\n// Actualiza la hora cada segundo\nsetInterval(actualizarHora, 1000)\n\n// Inicializa inmediatamente\nactualizarHora();\n\n// Obteniendo los grados\nconst KelACen = grados => Math.round(grados - 273.15);\n\nfunction limpiarHTML() {\n    while (dias.firstChild) {\n        dias.removeChild(dias.firstChild);\n    }\n}\n\nfunction limpiarClima() {\n    while (resultado2.firstChild) {\n        resultado2.removeChild(resultado2.firstChild);\n        resultado3.removeChild(resultado3.firstChild);\n    }\n}\n\nfunction spinnerC() {\n\n    limpiarHTML()\n    limpiarClima()\n\n    const divSpinner = document.createElement('div');\n    divSpinner.classList.add('spinner');\n    dias.appendChild(divSpinner)\n}\n\n\n\n\n\n//# sourceURL=webpack://weather/./src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.js"]();
/******/ 	
/******/ })()
;